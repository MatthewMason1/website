[{"/home/anthony/Documents/Code/GitHub/yah/src/index.js":"1","/home/anthony/Documents/Code/GitHub/yah/src/App.js":"2","/home/anthony/Documents/Code/GitHub/yah/src/reportWebVitals.js":"3","/home/anthony/Documents/Code/GitHub/website/src/index.tsx":"4","/home/anthony/Documents/Code/GitHub/website/src/app/App.tsx":"5","/home/anthony/Documents/Code/GitHub/website/src/components/Navbar.tsx":"6"},{"size":500,"mtime":1646845693731,"results":"7","hashOfConfig":"8"},{"size":528,"mtime":1646845693727,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1646845693731,"results":"10","hashOfConfig":"8"},{"size":216,"mtime":1646852577629,"results":"11","hashOfConfig":"12"},{"size":216,"mtime":1646851911591,"results":"13","hashOfConfig":"12"},{"size":1415,"mtime":1646852892676,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cuep04",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n62q8v",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/anthony/Documents/Code/GitHub/yah/src/index.js",[],[],"/home/anthony/Documents/Code/GitHub/yah/src/App.js",[],[],"/home/anthony/Documents/Code/GitHub/yah/src/reportWebVitals.js",[],[],"/home/anthony/Documents/Code/GitHub/website/src/index.tsx",[],[],"/home/anthony/Documents/Code/GitHub/website/src/app/App.tsx",[],[],"/home/anthony/Documents/Code/GitHub/website/src/components/Navbar.tsx",["34","35","36","37"],[],"import React from 'react';\n\nclass Navbar extends React.Component {\n    state = {\n        open: ''\n    }\n    showHideProfileOptions = () => {\n        let cur = this.state.open\n        if (!cur) this.setState({ open: 'open' })\n        else this.setState({ open: '' })\n    }\n    render() {\n        const { open } = this.state;\n        return (\n            <div>\n                <nav>\n                    <div className=\"flex\">\n                        <img alt=\"FlipAnim\" className=\"nav-logo\" src=\"../public/img/flipanimv2.png\" height=\"35px\" />\n                        <a className=\"linktitle\">Browse</a>\n                        <a className=\"linktitle\">Search</a>\n                        <a className=\"linktitle\">Followed</a>\n                    </div>\n                    <div className=\"profile\">\n                        <img onClick={this.showHideProfileOptions.bind(this)} />\n                    </div>\n                </nav>\n                <div className={`profile-options ${open}`}>\n                    <p className='logged-in-as'>\n                        Logged in as <span>@FlipAnim</span></p>\n                    <div className=\"profile-option\" id=\"profileLink\">Profile</div>\n                    <div className=\"profile-option\">Settings</div>\n                    <div className=\"profile-option\" id=\"logOut\">Log out</div>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nexport default Navbar",{"ruleId":"38","severity":1,"message":"39","line":19,"column":25,"nodeType":"40","endLine":19,"endColumn":50},{"ruleId":"38","severity":1,"message":"39","line":20,"column":25,"nodeType":"40","endLine":20,"endColumn":50},{"ruleId":"38","severity":1,"message":"39","line":21,"column":25,"nodeType":"40","endLine":21,"endColumn":50},{"ruleId":"41","severity":1,"message":"42","line":24,"column":25,"nodeType":"40","endLine":24,"endColumn":81},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]